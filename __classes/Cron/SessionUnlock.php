<?phpclass Cron_SessionUnlock //extends BaseClass{        # ============================================================================    # CRON :: Releases sessions that have bene locked beyond a specified time    # ============================================================================            public $Show_Query          = true;     // TRUE = output the database queries    public $Show_Query_Result   = true;     // TRUE = output the database query results        public $Allow_Execute       = true;     // TRUE = allows cron to run    public $Update_Database     = false;    // TRUE = updates database to unlock session    public $Sessions            = array();        public $SQL = null;            public function  __construct()    {        $this->SQL = Lib_Singleton::GetInstance('Lib_Pdo');                //parent::__construct();    }        public function Execute() {        if ($this->Allow_Execute) {            $this->GetAllSessions();            $this->UnlockAllSessions();        }    }        public function GetAllSessions()    {        # get the records        $record = $this->SQL->GetArrayAll(array(            'table' => $GLOBALS['TABLE_sessions'],            'keys'  => "sessions_id, locked, locked_wh_id, locked_start_datetime",            'where' => "`locked`=1 AND `booked`=0 AND active=1",        ));                if ($this->Show_Query) echo "<br />LAST QUERY = " . $this->SQL->Db_Last_Query;        if ($this->Show_Query_Result && $record) echo "<br />LAST QUERY RESULT = " . ArrayToStr($record);                # store the records        if ($record) {            $this->Sessions = $record;        }    }        public function UnlockAllSessions()    {            echo "<br /> count ===> " . count($this->Sessions);            foreach ($this->Sessions as $session) {                    #echo "<br />";            #echo ArrayToStr($session);            #echo "<br />";                        /*            echo "<br />sessions_id ===> " . $session['sessions_id'];            echo "<br />locked ===> " . $session['locked'];            echo "<br />locked_wh_id ===> " . $session['locked_wh_id'];            echo "<br />locked_start_datetime ===> " . $session['locked_start_datetime'];            echo "<br /><br />";            */                        $session_id = 0;                        # update the database record            if ($this->Update_Database) {                $this->UnlockSingleSession($session_id);            }        }    }        public function UnlockSingleSession($SESSIONS_ID)    {        if ($this->Update_Database) {            $key_values = $this->FormatDataForUpdate(array(                'locked' => 0,                'locked_wh_id' => '',                'locked_start_datetime' => '',            ));            $record = $this->SQL->UpdateRecord(array(                'table'         => $GLOBALS['TABLE_sessions'],                'key_values'    => $key_values,                'where'         => "`sessions_id`='{$SESSIONS_ID}' AND active=1",            ));            if ($this->show_query) echo "<br />LAST QUERY = " . $this->SQL->Db_Last_Query;        }    }    } // end class